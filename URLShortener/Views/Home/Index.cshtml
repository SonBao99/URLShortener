@{
    ViewData["Title"] = "URL Shortener";
}

<div class="container mx-auto px-4 py-8 max-w-2xl">
    <h1 class="text-4xl font-semibold mb-6 text-center text-gray-800">URL Shortener</h1>

    <form id="urlShortenerForm" class="space-y-6 bg-white p-8 rounded-lg shadow-lg border border-gray-200">
        @Html.AntiForgeryToken()  @* Add this line for the token *@

        <!-- Original URL Input -->
        <div class="form-group">
            <label for="originalUrl" class="block text-sm font-medium text-gray-700 mb-2">URL to Shorten *</label>
            <input type="url"
                   class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-900"
                   id="originalUrl"
                   name="originalUrl"
                   required
                   placeholder="https://example.com">
            <div class="text-red-500 text-sm mt-1" id="urlError"></div>
        </div>

        <!-- Title Input -->
        <div class="form-group">
            <label for="urlTitle" class="block text-sm font-medium text-gray-700 mb-2">Title (Optional)</label>
            <input type="text"
                   class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-900"
                   id="urlTitle"
                   name="urlTitle"
                   maxlength="100"
                   placeholder="Enter a title (optional)">
        </div>

        <!-- Description Input -->
        <div class="form-group">
            <label for="urlDescription" class="block text-sm font-medium text-gray-700 mb-2">Description (Optional)</label>
            <textarea class="w-full px-4 py-3 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 text-gray-900"
                      id="urlDescription"
                      name="urlDescription"
                      rows="4"
                      maxlength="500"
                      placeholder="Enter a description (optional)"></textarea>
        </div>

        <!-- Alert Container -->
        <div id="alertContainer" class="hidden p-4 rounded-md">
            <div class="flex">
                <div class="flex-shrink-0">
                    <svg class="h-5 w-5" id="alertIcon" viewBox="0 0 20 20" fill="currentColor"></svg>
                </div>
                <div class="ml-3">
                    <p class="text-sm font-medium" id="alertMessage"></p>
                </div>
            </div>
        </div>

        <!-- Submit Button -->
        <button type="submit"
                class="w-full bg-blue-600 text-white px-6 py-3 rounded-md hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition duration-300 disabled:opacity-50"
                id="submitButton">
            Shorten URL
        </button>
    </form>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const form = document.getElementById('urlShortenerForm');
            const submitButton = document.getElementById('submitButton');
            const alertContainer = document.getElementById('alertContainer');
            const alertMessage = document.getElementById('alertMessage');
            const alertIcon = document.getElementById('alertIcon');
            const urlError = document.getElementById('urlError');
            const originalUrlInput = document.getElementById('originalUrl');  // Reference the original URL input field

            function showAlert(message, type = 'error') {
                alertContainer.className = type === 'error'
                    ? 'bg-red-50 text-red-700 mb-4'
                    : 'bg-green-50 text-green-700 mb-4';

                alertIcon.innerHTML = type === 'error'
                    ? '<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.28 7.22a.75.75 0 00-1.06 1.06L8.94 10l-1.72 1.72a.75.75 0 101.06 1.06L10 11.06l1.72 1.72a.75.75 0 101.06-1.06L11.06 10l1.72-1.72a.75.75 0 00-1.06-1.06L10 8.94 8.28 7.22z"/>'
                    : '<path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.857-9.809a.75.75 0 00-1.214-.882l-3.483 4.79-1.88-1.88a.75.75 0 10-1.06 1.061l2.5 2.5a.75.75 0 001.137-.089l4-5.5z"/>';

                alertMessage.textContent = message;
                alertContainer.classList.remove('hidden');
            }

            function validateUrl(url) {
                try {
                    new URL(url);
                    return true;
                } catch {
                    return false;
                }
            }

            form.addEventListener('submit', async function (e) {
                e.preventDefault();

                // Reset previous error states
                alertContainer.classList.add('hidden');
                urlError.textContent = '';

                const originalUrl = originalUrlInput.value.trim();  // Get the actual value from the input field

                // Validate URL
                if (!originalUrl) {
                    urlError.textContent = 'URL is required';
                    return;
                }

                if (!validateUrl(originalUrl)) {
                    urlError.textContent = 'Please enter a valid URL (including http:// or https://)';
                    return;
                }

                // Disable submit button and show loading state
                submitButton.disabled = true;
                submitButton.textContent = 'Shortening...';

                try {
                    // Get the token element
                    const tokenElement = document.querySelector('input[name="__RequestVerificationToken"]');
                    const headers = {
                        'Content-Type': 'application/json'
                    };

                    // Only add the token if it exists
                    if (tokenElement) {
                        headers['RequestVerificationToken'] = tokenElement.value;
                    }

                    const response = await fetch('/api/url/shorten', {
                        method: 'POST',
                        headers: headers,
                        body: JSON.stringify({
                            originalUrl: originalUrl,  // Use the correct original URL
                            title: document.getElementById('urlTitle').value.trim() || undefined,
                            description: document.getElementById('urlDescription').value.trim() || undefined
                        })
                    });

                    if (!response.ok) {
                        const errorData = await response.json();
                        throw new Error(errorData.message || `Error: ${response.status}`);
                    }

                    const data = await response.json();
                    showAlert('URL shortened successfully!', 'success');

                    // Optionally display the shortened URL
                    const shortenedUrl = data.shortenedUrl;
                    alertMessage.textContent = `Shortened URL: ${shortenedUrl}`;

                    // Optionally clear form
                    form.reset();

                } catch (error) {
                    showAlert(error.message || 'An error occurred while shortening the URL');
                } finally {
                    submitButton.disabled = false;
                    submitButton.textContent = 'Shorten URL';
                }
            });
        });
    </script>
}
